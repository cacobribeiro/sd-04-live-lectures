:cérebro: Em computação, memoization ou memoisation é uma técnica de otimização usado principalmente para acelerar programas de computador, armazenando os resultados de chamadas de função caros e retornando o resultado em cache quando as mesmas entradas ocorrer novamente.

Python possui um decorador de funções chamado cache que nos permite armazenar os valores previamente calculados retornando-os quando uma mesma entrada é passada.

Exemplo:
@cache
def fibonacci(n):
    if n <= 1:
        return n
    else:
        return fibonacci(n-1) + fibonacci(n-2)

>>> fibonacci(1)  # retorna 1 (menor ou igual a 1 retorna n)
1
>>> fibonacci(2)  # retorna 1 
1
# fibonacci(3)
# quando invoca fibonacci(2) + fibonacci(1) obtém os valores imediatamente 
# já previamente calculados
# não precisando assim percorrer toda a árvore de recursão
>>> fibonacci(3)  
2

:novo: Este decorador foi adicionado na versão 3.9 do python.

Quem curtiu reage com :cérebro: !