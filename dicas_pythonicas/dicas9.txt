Python é conhecido por suas baterias inclusas :pilha:, ou seja, já vem com muita coisa na biblioteca padrão da linguagem. Vamos dar uma espiada em um método super legal do pacote functools.

:lâmpada: partial

É uma função que recebe como parâmetro uma função e alguns atributos, retornando uma nova função mas com parâmetros fixados. Pode receber parâmetros nomeados ou não, mas fique atento, parâmetros não nomeados são fixados de forma posicional, ou seja de acordo com a ordem em que são passados.

from functools import partial

# dado uma função que soma dois números
def soma(x, y):
    return x + y

# podemos aplicar a função partial em soma
# incrementa será uma nova função
# que quando invocada terá o valor de x como 1
# e y recebido como parâmetro
incrementa = partial(soma, 1)

# semelhante a anterior, porém o valor
# fixado foi explicitamente o y
decrementa = partial(soma, y=-1)

# incrementa e decrementa são uma aplicação parcial da função soma,
# porém com valores fixados
print(incrementa(4))    # saída: 5
print(decrementa(4))    # saída: 3

Quem curtiu reage com :pilha:!